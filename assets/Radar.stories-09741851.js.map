{"version":3,"file":"Radar.stories-09741851.js","sources":["../../packages/Radar/shader/vertex.ts","../../packages/Radar/shader/fragment.ts","../../packages/Radar/index.ts","../../src/stories/components/radar/index.vue"],"sourcesContent":["const vertexShader = /*glsl*/ `\n  precision lowp float;\n  varying vec2 vUv;\n\n  void main(){\n    vec4 modelPosition = modelMatrix * vec4( position, 1.0 );\n    vUv=uv;\n    gl_Position =  projectionMatrix * viewMatrix * modelPosition;\n  }\n`\n\nexport default vertexShader\n","const fragmentShader = /*glsl*/ `\n  precision lowp float;\n  uniform float uTime;\n  uniform vec2 uResolution;\n  varying vec2 vUv;\n\n  #define SMOOTH(r,R) (1.0-smoothstep(R-.001,R+.001, r))\n  #define RANGE(a,b,x) (step(a,x)*(1.0-step(b,x)))\n  #define RS(a,b,x) (smoothstep(a-1.0,a+1.0,x)*(1.0-smoothstep(b-1.0,b+1.0,x)))\n  #define M_PI 3.1415926535897932384626433832795\n\n  #define blue1 vec3(0.74,0.95,1.00)\n  #define blue2 vec3(0.87,0.98,1.00)\n  #define blue3 vec3(0.35,0.76,0.83)\n  #define blue4 vec3(0.953,0.969,0.89)\n  #define red   vec3(1.00,0.38,0.227)\n  #define green   vec3(.5,0.99,0.)\n\n  vec2 MOV(float a, float b, float c, float d, float t) {\n    return vec2(\n      a * cos(t) + b * cos(0.1 * t), \n      c * sin(t) + d * cos(0.1 * t)\n    );\n  }\n\n  float movingLine(vec2 uv, vec2 center, float radius)\n  {\n      //angle of the line\n      float theta0 = 90.0 * uTime;\n      vec2 d = uv - center;\n      float r = sqrt( dot( d, d ) );\n      if(r<radius)\n      {\n          //compute the distance to the line theta=theta0\n          vec2 p = radius*vec2(cos(theta0*M_PI/180.0),\n                              -sin(theta0*M_PI/180.0));\n          float l = length( d - p*clamp( dot(d,p)/dot(p,p), 0.0, 1.0) );\n        d = normalize(d);\n          //compute gradient based on angle difference to theta0\n        float theta = mod(180.0*atan(d.y,d.x)/M_PI+theta0,360.0);\n          float gradient = clamp(1.0-theta/90.0,0.0,1.0);\n          return SMOOTH(l,1.0)+0.5*gradient;\n      }\n      else return 0.0;\n  }\n\n  float circle(vec2 uv, vec2 center, float radius, float width)\n  {\n      float r = length(uv - center);\n      return SMOOTH(r-width/2.0,radius)-SMOOTH(r+width/2.0,radius);\n  }\n\n  float circle2(vec2 uv, vec2 center, float radius, float width, float opening)\n  {\n      vec2 d = uv - center;\n      float r = sqrt( dot( d, d ) );\n      d = normalize(d);\n      if( abs(d.y) > opening )\n        return SMOOTH(r-width/2.0,radius)-SMOOTH(r+width/2.0,radius);\n      else\n          return 0.0;\n  }\n\n  float circle3(vec2 uv, vec2 center, float radius, float width)\n  {\n      vec2 d = uv - center;\n      float r = sqrt( dot( d, d ) );\n      d = normalize(d);\n      float theta = 180.0*(atan(d.y,d.x)/M_PI);\n      return smoothstep(2.0, 2.1, abs(mod(theta+2.0,45.0)-2.0)) *\n          mix( 0.5, 1.0, step(45.0, abs(mod(theta, 180.0)-90.0)) ) *\n          (SMOOTH(r-width/2.0,radius)-SMOOTH(r+width/2.0,radius));\n  }\n\n  float triangles(vec2 uv, vec2 center, float radius)\n  {\n      vec2 d = uv - center;\n      return RS(-8.0, 0.0, d.x-radius) * (1.0-smoothstep( 7.0+d.x-radius,9.0+d.x-radius, abs(d.y)))\n          + RS( 0.0, 8.0, d.x+radius) * (1.0-smoothstep( 7.0-d.x-radius,9.0-d.x-radius, abs(d.y)))\n          + RS(-8.0, 0.0, d.y-radius) * (1.0-smoothstep( 7.0+d.y-radius,9.0+d.y-radius, abs(d.x)))\n          + RS( 0.0, 8.0, d.y+radius) * (1.0-smoothstep( 7.0-d.y-radius,9.0-d.y-radius, abs(d.x)));\n  }\n\n  float CROSS(vec2 uv, vec2 center, float radius, float width)\n  {\n      vec2 d = uv - center;\n      float x = d.x;\n      float y = d.y;\n      float r = sqrt( dot( d, d ) );\n      if( (r<radius) && ( (x<=y+width && x>=y-width) || (x<=-y+width && x>=-y-width) ) )\n          return 1.0;\n      else return 0.0;\n  }\n  float dots(vec2 uv, vec2 center, float radius)\n  {\n      vec2 d = uv - center;\n      float r = sqrt( dot( d, d ) );\n      if( r <= 2.5 )\n          return 1.0;\n      if( ( r<= radius) && ( (abs(d.y+0.5)<=1.0) && ( mod(d.x+1.0, 50.0) < 2.0 ) ) )\n          return 1.0;\n      else if ( (abs(d.y+0.5)<=1.0) && ( r >= 50.0 ) && ( r < 115.0 ) )\n          return 0.5;\n      else\n        return 0.0;\n  }\n  float bip1(vec2 uv, vec2 center)\n  {\n      // float r = length(uv - center);\n      // float R = 8.+mod(87.0*uTime, 80.0);\n      // return (0.5-0.5*cos(30.0*uTime)) * SMOOTH(r,3.0) + SMOOTH(4.0,r) - SMOOTH(6.0,r);\n      return SMOOTH(length(uv - center), .003);\n  }\n  float bip2(vec2 uv, vec2 center, float radius, float dis)\n  {\n      float r = length(uv - center);\n      float R = radius+mod(8.0*uTime, .008);\n      return \n          (0.5-0.5*cos(30.0*uTime)) * SMOOTH(r,.001)\n          + SMOOTH(.002,r) - SMOOTH(.004,r);\n          // + smoothstep(max(.004,R-dis),R,r)-SMOOTH(R,r);\n  }\n\n  void main() {\n    vec3 finalColor = vec3(0.);\n    vec2 uv = vUv;\n    vec2 c = vec2(0.5);\n    finalColor += circle(uv, c, .2, .002) * blue1;\n    finalColor += circle(uv, c, .1, .0004) * blue1;\n    finalColor += vec3(0.3*CROSS(uv, c, .2, .0006));\n    finalColor += movingLine(uv, c, .1998) * blue3;\n    finalColor += circle(uv, c, .005, .0004) * blue3;\n    if(length(uv-c) < 240.0) {\n      // 搞点随机移动的目标点\n      vec2 p = .05*MOV(1.3,1.0,1.0,1.4,3.0+0.1*uTime);\n      finalColor += bip1(uv, c+p) * vec3(1,1,1);\n      p = .05*MOV(0.9,-1.1,1.7,0.8,-2.0+sin(0.1*uTime)+0.15*uTime);\n      finalColor += bip1(uv, c+p) * vec3(1,1,1);\n      p = .05*MOV(1.54,1.7,1.37,1.8,sin(0.1*uTime+7.0)+0.2*uTime);\n      finalColor += bip2(uv,c+p,.008,.002) * green;\n      finalColor += bip2(uv,c,.2,.008) * red;\n    }\n\n    gl_FragColor = vec4( finalColor, 1.0 );\n  }\n`\n\nexport default fragmentShader\n","import * as THREE from 'three'\nimport vertexShader from './shader/vertex'\nimport fragmentShader from './shader/fragment'\n\nconst createRadar = (size: number) => {\n  const geometry = new THREE.CircleGeometry(size * 10, 64) //默认在XOY平面上\n  const material = new THREE.ShaderMaterial({\n    vertexShader,\n    fragmentShader,\n    uniforms: {\n      // 动画时间\n      uTime: {\n        value: 0\n      }\n    },\n    side: THREE.DoubleSide,\n    transparent: true,\n    depthTest: true,\n    depthWrite: true,\n    // depthFunc: THREE.LessEqualDepth,\n    // alphaTest: 0.2\n    // blending: THREE.CustomBlending,\n    // blendSrc: THREE.SrcAlphaFactor,\n    // blendDst: THREE.OneMinusSrcAlphaFactor\n  })\n  const mesh = new THREE.Mesh(geometry, material) //网格模型对象Mesh\n  mesh.name = 'radar'\n\n  const clock = new THREE.Clock()\n  function animate() {\n    const elapsedTime = clock.getElapsedTime()\n    material.uniforms.uTime.value = elapsedTime\n    requestAnimationFrame(animate)\n  }\n\n  animate()\n\n  return mesh\n}\n\nexport { createRadar }\n","<template>\n  <div id=\"radar\"></div>\n</template>\n\n<script setup lang=\"ts\">\nimport { onMounted, onBeforeUpdate, watch, onBeforeMount } from 'vue';\nimport * as THREE from 'three'\nimport { scene, renderer, camera } from '../basic/three'\n// import { controls } from '../basic/controls'\nimport { createRadar } from '../../../../packages/index'\n\nconst props = defineProps({\n  size: {\n    type: Number,\n    default: 100,\n    required: false\n  }\n})\n\nlet timer: any = null\n\nonBeforeMount(() => {\n  if (timer) cancelAnimationFrame(timer)\n  scene.remove.apply(scene, scene.children)\n})\n\nonMounted(() => {\n  camera.zoom = 1;\n  const RadarMesh = createRadar(props.size)\n  RadarMesh.position.z = 0\n  // RadarMesh.rotateX(-Math.PI / 4)\n  scene.add( RadarMesh );\n  const axesHelper = new THREE.AxesHelper(5000);\n  // scene.add(axesHelper);\n  const RadarElement = document.getElementById('radar')\n  if (RadarElement) RadarElement.appendChild(renderer.domElement)\n  const render = () => {\n    renderer.render(scene, camera)\n    camera.updateProjectionMatrix()\n    // controls.update()\n    timer = requestAnimationFrame(render)\n  }\n\n  render()\n})\n\nonBeforeUpdate(() => {\n  console.log('onBeforeUpdate')\n  renderer.clear()\n  scene.remove.apply(scene, scene.children)\n  scene.remove.apply(scene, scene.children)\n  renderer.forceContextLoss()\n  cancelAnimationFrame(timer)\n  const gl = renderer.domElement.getContext('webgl')\n  gl && gl.getExtension('WEBGL_lose_context')?.loseContext()\n})\n</script>"],"names":["vertexShader","fragmentShader","createRadar","__name","size","geometry","THREE.CircleGeometry","material","THREE.ShaderMaterial","THREE.DoubleSide","mesh","THREE.Mesh","clock","THREE.Clock","animate","elapsedTime","timer","onBeforeMount","scene","onMounted","camera","RadarMesh","props","THREE.AxesHelper","RadarElement","renderer","render","onBeforeUpdate","gl","_a"],"mappings":"oQAAA,MAAMA,EAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,ECAxBC,EAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,ECI1BC,EAAcC,EAACC,GAAiB,CACpC,MAAMC,EAAW,IAAIC,EAAqBF,EAAO,GAAI,EAAE,EACjDG,EAAW,IAAIC,EAAqB,CACxC,aAAAR,EACA,eAAAC,EACA,SAAU,CAER,MAAO,CACL,MAAO,CACT,CACF,EACA,KAAMQ,EACN,YAAa,GACb,UAAW,GACX,WAAY,EAAA,CAMb,EACKC,EAAO,IAAIC,EAAWN,EAAUE,CAAQ,EAC9CG,EAAK,KAAO,QAEN,MAAAE,EAAQ,IAAIC,EAClB,SAASC,GAAU,CACX,MAAAC,EAAcH,EAAM,iBACjBL,EAAA,SAAS,MAAM,MAAQQ,EAChC,sBAAsBD,CAAO,CAC/B,CAJS,OAAAX,EAAAW,EAAA,WAMDA,IAEDJ,CACT,EAlCoB,wHCepB,IAAIM,EAAa,KAEjB,OAAAC,EAAc,IAAM,CACdD,GAAO,qBAAqBA,CAAK,EACrCE,EAAM,OAAO,MAAMA,EAAOA,EAAM,QAAQ,CAAA,CACzC,EAEDC,EAAU,IAAM,CACdC,EAAO,KAAO,EACR,MAAAC,EAAYnB,EAAYoB,EAAM,IAAI,EACxCD,EAAU,SAAS,EAAI,EAEvBH,EAAM,IAAKG,CAAU,EACF,IAAIE,EAAiB,GAAI,EAEtC,MAAAC,EAAe,SAAS,eAAe,OAAO,EAChDA,GAA2BA,EAAA,YAAYC,EAAS,UAAU,EAC9D,MAAMC,EAASvB,EAAA,IAAM,CACVsB,EAAA,OAAOP,EAAOE,CAAM,EAC7BA,EAAO,uBAAuB,EAE9BJ,EAAQ,sBAAsBU,CAAM,CAAA,EAJvB,UAORA,GAAA,CACR,EAEDC,EAAe,IAAM,OACnB,QAAQ,IAAI,gBAAgB,EAC5BF,EAAS,MAAM,EACfP,EAAM,OAAO,MAAMA,EAAOA,EAAM,QAAQ,EACxCA,EAAM,OAAO,MAAMA,EAAOA,EAAM,QAAQ,EACxCO,EAAS,iBAAiB,EAC1B,qBAAqBT,CAAK,EAC1B,MAAMY,EAAKH,EAAS,WAAW,WAAW,OAAO,EACjDG,KAAMC,EAAAD,EAAG,aAAa,oBAAoB,IAApC,MAAAC,EAAuC,cAAY,CAC1D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}